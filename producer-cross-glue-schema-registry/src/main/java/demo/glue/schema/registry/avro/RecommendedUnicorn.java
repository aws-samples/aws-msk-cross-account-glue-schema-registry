/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package demo.glue.schema.registry.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RecommendedUnicorn extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3733390049719525866L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RecommendedUnicorn\",\"namespace\":\"demo.glue.schema.registry.avro\",\"fields\":[{\"name\":\"unicorn_id\",\"type\":\"int\",\"doc\":\"recommended unicorn id\"},{\"name\":\"color\",\"type\":{\"type\":\"enum\",\"name\":\"unicorn_color\",\"symbols\":[\"WHITE\",\"RED\",\"BLUE\"]}},{\"name\":\"stars_rating\",\"type\":[\"null\",\"int\"],\"doc\":\"unicorn star ratings based on customers feedback\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RecommendedUnicorn> ENCODER =
      new BinaryMessageEncoder<RecommendedUnicorn>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RecommendedUnicorn> DECODER =
      new BinaryMessageDecoder<RecommendedUnicorn>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RecommendedUnicorn> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RecommendedUnicorn> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RecommendedUnicorn> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RecommendedUnicorn>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RecommendedUnicorn to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RecommendedUnicorn from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RecommendedUnicorn instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RecommendedUnicorn fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** recommended unicorn id */
   private int unicorn_id;
   private demo.glue.schema.registry.avro.unicorn_color color;
  /** unicorn star ratings based on customers feedback */
   private java.lang.Integer stars_rating;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RecommendedUnicorn() {}

  /**
   * All-args constructor.
   * @param unicorn_id recommended unicorn id
   * @param color The new value for color
   * @param stars_rating unicorn star ratings based on customers feedback
   */
  public RecommendedUnicorn(java.lang.Integer unicorn_id, demo.glue.schema.registry.avro.unicorn_color color, java.lang.Integer stars_rating) {
    this.unicorn_id = unicorn_id;
    this.color = color;
    this.stars_rating = stars_rating;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unicorn_id;
    case 1: return color;
    case 2: return stars_rating;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unicorn_id = (java.lang.Integer)value$; break;
    case 1: color = (demo.glue.schema.registry.avro.unicorn_color)value$; break;
    case 2: stars_rating = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'unicorn_id' field.
   * @return recommended unicorn id
   */
  public int getUnicornId() {
    return unicorn_id;
  }


  /**
   * Sets the value of the 'unicorn_id' field.
   * recommended unicorn id
   * @param value the value to set.
   */
  public void setUnicornId(int value) {
    this.unicorn_id = value;
  }

  /**
   * Gets the value of the 'color' field.
   * @return The value of the 'color' field.
   */
  public demo.glue.schema.registry.avro.unicorn_color getColor() {
    return color;
  }


  /**
   * Sets the value of the 'color' field.
   * @param value the value to set.
   */
  public void setColor(demo.glue.schema.registry.avro.unicorn_color value) {
    this.color = value;
  }

  /**
   * Gets the value of the 'stars_rating' field.
   * @return unicorn star ratings based on customers feedback
   */
  public java.lang.Integer getStarsRating() {
    return stars_rating;
  }


  /**
   * Sets the value of the 'stars_rating' field.
   * unicorn star ratings based on customers feedback
   * @param value the value to set.
   */
  public void setStarsRating(java.lang.Integer value) {
    this.stars_rating = value;
  }

  /**
   * Creates a new RecommendedUnicorn RecordBuilder.
   * @return A new RecommendedUnicorn RecordBuilder
   */
  public static demo.glue.schema.registry.avro.RecommendedUnicorn.Builder newBuilder() {
    return new demo.glue.schema.registry.avro.RecommendedUnicorn.Builder();
  }

  /**
   * Creates a new RecommendedUnicorn RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RecommendedUnicorn RecordBuilder
   */
  public static demo.glue.schema.registry.avro.RecommendedUnicorn.Builder newBuilder(demo.glue.schema.registry.avro.RecommendedUnicorn.Builder other) {
    if (other == null) {
      return new demo.glue.schema.registry.avro.RecommendedUnicorn.Builder();
    } else {
      return new demo.glue.schema.registry.avro.RecommendedUnicorn.Builder(other);
    }
  }

  /**
   * Creates a new RecommendedUnicorn RecordBuilder by copying an existing RecommendedUnicorn instance.
   * @param other The existing instance to copy.
   * @return A new RecommendedUnicorn RecordBuilder
   */
  public static demo.glue.schema.registry.avro.RecommendedUnicorn.Builder newBuilder(demo.glue.schema.registry.avro.RecommendedUnicorn other) {
    if (other == null) {
      return new demo.glue.schema.registry.avro.RecommendedUnicorn.Builder();
    } else {
      return new demo.glue.schema.registry.avro.RecommendedUnicorn.Builder(other);
    }
  }

  /**
   * RecordBuilder for RecommendedUnicorn instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RecommendedUnicorn>
    implements org.apache.avro.data.RecordBuilder<RecommendedUnicorn> {

    /** recommended unicorn id */
    private int unicorn_id;
    private demo.glue.schema.registry.avro.unicorn_color color;
    /** unicorn star ratings based on customers feedback */
    private java.lang.Integer stars_rating;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(demo.glue.schema.registry.avro.RecommendedUnicorn.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.unicorn_id)) {
        this.unicorn_id = data().deepCopy(fields()[0].schema(), other.unicorn_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.color)) {
        this.color = data().deepCopy(fields()[1].schema(), other.color);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.stars_rating)) {
        this.stars_rating = data().deepCopy(fields()[2].schema(), other.stars_rating);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing RecommendedUnicorn instance
     * @param other The existing instance to copy.
     */
    private Builder(demo.glue.schema.registry.avro.RecommendedUnicorn other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.unicorn_id)) {
        this.unicorn_id = data().deepCopy(fields()[0].schema(), other.unicorn_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.color)) {
        this.color = data().deepCopy(fields()[1].schema(), other.color);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stars_rating)) {
        this.stars_rating = data().deepCopy(fields()[2].schema(), other.stars_rating);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'unicorn_id' field.
      * recommended unicorn id
      * @return The value.
      */
    public int getUnicornId() {
      return unicorn_id;
    }


    /**
      * Sets the value of the 'unicorn_id' field.
      * recommended unicorn id
      * @param value The value of 'unicorn_id'.
      * @return This builder.
      */
    public demo.glue.schema.registry.avro.RecommendedUnicorn.Builder setUnicornId(int value) {
      validate(fields()[0], value);
      this.unicorn_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'unicorn_id' field has been set.
      * recommended unicorn id
      * @return True if the 'unicorn_id' field has been set, false otherwise.
      */
    public boolean hasUnicornId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'unicorn_id' field.
      * recommended unicorn id
      * @return This builder.
      */
    public demo.glue.schema.registry.avro.RecommendedUnicorn.Builder clearUnicornId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'color' field.
      * @return The value.
      */
    public demo.glue.schema.registry.avro.unicorn_color getColor() {
      return color;
    }


    /**
      * Sets the value of the 'color' field.
      * @param value The value of 'color'.
      * @return This builder.
      */
    public demo.glue.schema.registry.avro.RecommendedUnicorn.Builder setColor(demo.glue.schema.registry.avro.unicorn_color value) {
      validate(fields()[1], value);
      this.color = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'color' field has been set.
      * @return True if the 'color' field has been set, false otherwise.
      */
    public boolean hasColor() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'color' field.
      * @return This builder.
      */
    public demo.glue.schema.registry.avro.RecommendedUnicorn.Builder clearColor() {
      color = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'stars_rating' field.
      * unicorn star ratings based on customers feedback
      * @return The value.
      */
    public java.lang.Integer getStarsRating() {
      return stars_rating;
    }


    /**
      * Sets the value of the 'stars_rating' field.
      * unicorn star ratings based on customers feedback
      * @param value The value of 'stars_rating'.
      * @return This builder.
      */
    public demo.glue.schema.registry.avro.RecommendedUnicorn.Builder setStarsRating(java.lang.Integer value) {
      validate(fields()[2], value);
      this.stars_rating = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'stars_rating' field has been set.
      * unicorn star ratings based on customers feedback
      * @return True if the 'stars_rating' field has been set, false otherwise.
      */
    public boolean hasStarsRating() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'stars_rating' field.
      * unicorn star ratings based on customers feedback
      * @return This builder.
      */
    public demo.glue.schema.registry.avro.RecommendedUnicorn.Builder clearStarsRating() {
      stars_rating = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RecommendedUnicorn build() {
      try {
        RecommendedUnicorn record = new RecommendedUnicorn();
        record.unicorn_id = fieldSetFlags()[0] ? this.unicorn_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.color = fieldSetFlags()[1] ? this.color : (demo.glue.schema.registry.avro.unicorn_color) defaultValue(fields()[1]);
        record.stars_rating = fieldSetFlags()[2] ? this.stars_rating : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RecommendedUnicorn>
    WRITER$ = (org.apache.avro.io.DatumWriter<RecommendedUnicorn>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RecommendedUnicorn>
    READER$ = (org.apache.avro.io.DatumReader<RecommendedUnicorn>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.unicorn_id);

    out.writeEnum(this.color.ordinal());

    if (this.stars_rating == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.stars_rating);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.unicorn_id = in.readInt();

      this.color = demo.glue.schema.registry.avro.unicorn_color.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.stars_rating = null;
      } else {
        this.stars_rating = in.readInt();
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.unicorn_id = in.readInt();
          break;

        case 1:
          this.color = demo.glue.schema.registry.avro.unicorn_color.values()[in.readEnum()];
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.stars_rating = null;
          } else {
            this.stars_rating = in.readInt();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










